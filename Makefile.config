## Refer to http://caffe.berkeleyvision.org/installation.html
# Contributions simplifying and improving our build system are welcome!

# cuDNN acceleration switch (uncomment to build with cuDNN).
USE_CUDNN := 1

# CPU-only switch (uncomment to build without GPU support).
# CPU_ONLY := 1

# To customize your choice of compiler, uncomment and set the following.
# N.B. the default for Linux is g++ and the default for OSX is clang++
# CUSTOM_CXX := g++

# CUDA directory contains bin/ and lib/ directories that we need.
#CUDA_DIR := /usr/local/cuda-5.5
#CUDA_DIR := /data/vision/torralba/datasetbias/caffe-cudnn/cuda-7.0
CUDA_DIR := /data/vision/torralba/sentences/lib/cuda-7.0
# On Ubuntu 14.04, if cuda tools are installed via
# "sudo apt-get install nvidia-cuda-toolkit" then use this instead:
# CUDA_DIR := /usr

# CUDA architecture setting: going with all of them (up to CUDA 5.5 compatible).
# For the latest architecture, you need to install CUDA >= 6.0 and uncomment
# the *_50 lines below.
CUDA_ARCH := -gencode arch=compute_20,code=sm_20 \
		-gencode arch=compute_20,code=sm_21 \
		-gencode arch=compute_30,code=sm_30 \
		-gencode arch=compute_35,code=sm_35 \
		-gencode arch=compute_50,code=sm_50 \
		-gencode arch=compute_50,code=compute_50

# BLAS choice:
# atlas for ATLAS (default)
# mkl for MKL
# open for OpenBlas
BLAS := mkl
# Custom (MKL/ATLAS/OpenBLAS) include and lib directories.
# Leave commented to accept the defaults for your choice of BLAS
# (which should work)!
#BLAS_INCLUDE := /data/vision/torralba/aditya_datasets/intel/mkl/include 
#/opt/intel/composer_xe_2013_sp1.0.080/mkl/include
#BLAS_LIB := /data/vision/torralba/aditya_datasets/intel/mkl/lib 
#/opt/intel/composer_xe_2013_sp1.0.080/mkl/lib/intel64

BLAS_INCLUDE := /data/vision/torralba/sentences/lib/intel/mkl/include
BLAS_LIB := /data/vision/torralba/sentences/lib/intel/mkl/lib/intel64

# This is required only if you will compile the matlab interface.
# MATLAB directory should contain the mex binary in /bin.
# MATLAB_DIR := /usr/local
# MATLAB_DIR := /Applications/MATLAB_R2012b.app
MATLAB_DIR := /afs/csail.mit.edu/system/amd64_linux26/matlab/latest

# NOTE: this is required only if you will compile the python interface.
# We need to be able to find Python.h and numpy/arrayobject.h.
PYTHON_INCLUDE := /usr/include/python2.7 \
		/usr/lib/python2.7/dist-packages/numpy/core/include
# Anaconda Python distribution is quite popular. Include path:
# PYTHON_INCLUDE := $(HOME)/anaconda/include \
		# $(HOME)/anaconda/include/python2.7 \
		# $(HOME)/anaconda/lib/python2.7/site-packages/numpy/core/include

# We need to be able to find libpythonX.X.so or .dylib.
PYTHON_LIB := /usr/local/lib 
#/data/vision/torralba/datasetbias/caffe/protobuf-2.5.0/lib
# PYTHON_LIB := $(HOME)/anaconda/lib

# Whatever else you find you need goes here.
#INCLUDE_DIRS := $(PYTHON_INCLUDE) /usr/local/include /data/vision/torralba/datasetbias/caffe/glog-0.3.3/include/ /data/vision/torralba/mooc-video/gflags-master/build/include /data/vision/torralba/mooc-video/boost_build_1_55/include
#LIBRARY_DIRS := $(PYTHON_LIB) /data/vision/torralba/datasetbias/caffe/glog-0.3.3/lib/ /data/vision/torralba/mooc-video/gflags-master/build/lib /data/vision/torralba/mooc-video/boost_build_1_55/lib /usr/lib /usr/local/lib /usr/local/cuda-5.5/lib

#INCLUDE_DIRS := $(PYTHON_INCLUDE) /data/vision/torralba/sentences/lib/boost/include /data/vision/torralba/datasetbias/caffe/glog-0.3.3/include/ /data/vision/torralba/datasetbias/caffe-latest/gflags-master/build/include/ /data/vision/torralba/datasetbias/caffe-cudnn2/mdb/libraries/liblmdb/ /data/vision/torralba/datasetbias/caffe-latest/gflags-master/build/include/ /data/vision/torralba/datasetbias/lib/opencv/install/include /data/vision/torralba/sentences/lib/cudnn-rc2 /usr/local/include
#LIBRARY_DIRS := /data/vision/torralba/datasetbias/lib/boost/lib /data/vision/torralba/datasetbias/caffe/glog-0.3.3/lib/ /data/vision/torralba/datasetbias/caffe-latest/gflags-master/build/lib/ /data/vision/torralba/datasetbias/caffe-cudnn2/mdb/libraries/liblmdb/ /data/vision/torralba/datasetbias/caffe-latest/gflags-master/build/lib/ /data/vision/torralba/datasetbias/lib/opencv/install/lib/ /data/vision/torralba/sentences/lib/cudnn-rc2 /usr/local/lib $(PYTHON_LIB)

INCLUDE_DIRS :=  /data/vision/torralba/sentences/lib/boost/include/ /data/vision/torralba/senteces/lib/glog/include/ /data/vision/torralba/sentences/lib/gflags/build/include/ /data/vision/torralba/sentences/lib/cudnn-rc2 /usr/local/include $(PYTHON_INCLUDE)
LIBRARY_DIRS := /data/vision/torralba/sentences/lib/boost/lib/ /data/vision/torralba/sentences/caffe/glog/lib/ /data/vision/torralba/sentences/lib/gflags/build/lib/ /data/vision/torralba/sentences/lib/cudnn-rc2 /usr/local/lib $(PYTHON_LIB)

BUILD_DIR := build
DISTRIBUTE_DIR := distribute

# Uncomment for debugging. Does not work on OSX due to https://github.com/BVLC/caffe/issues/171
# DEBUG := 1

# The ID of the GPU that 'make runtest' will use to run unit tests.
TEST_GPUID := 1 
